<xmi:XMI xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:notation="http://www.eclipse.org/gmf/runtime/1.0.2/notation" xmlns:sgraph="http://www.yakindu.org/sct/sgraph/2.0.0" xmi:version="2.0">
  <sgraph:Statechart xmi:id="_MvNJgMFBEeipM4DyHdzJFg" specification="@CycleBased(200)&#10;import: &quot;states.h&quot;&#10;import: &quot;helper_funcs.h&quot;&#10;&#10;interface:&#10;// Define events and&#10;// and variables here. &#10;//Use CTRL + Space for content assist.&#10;var pushed:bool=false&#10;var distance:float=0.0f&#10;var dist:float=0.0f&#10;var cx:float=0.0f&#10;var cy:float=0.0f&#10;var dx:float=0.0f&#10;var dy:float=0.0f&#10;var angle:float=0.0f&#10;var prev_encoder:uint16_t=0&#10;var curr_state:states=states.OFF&#10;var right_speed:uint16_t=0&#10;var left_speed:uint16_t=0&#10;var cliff_c:bool=false&#10;var cliff_l:bool=false&#10;var cliff_r:bool=false&#10;var theta:float=0.0f&#10;var angle_d:float=0.0f&#10;var prev_x:float=0.0f" name="robot_template" domainID="com.yakindu.domain.c">
    <regions xmi:id="_MvRa88FBEeipM4DyHdzJFg" name="main region">
      <vertices xsi:type="sgraph:State" xmi:id="_bEa2AOhyEemQArtQ3KXIEg" specification="entry/&#10;pushed=false&#10;always/&#10;pushed=is_button_press();&#10;cliff_l = is_left_bumper();&#10;cliff_c = is_center_bumper();&#10;cliff_r = is_right_bumper();&#10;parse();&#10;cx = curr_x;&#10;cy = curr_y;&#10;dx = desired_x;&#10;dy = desired_y;&#10;angle_d = curr_theta;&#10;angle = find_rotation(cx,cy,dx,dy,angle_d);&#10;distance = find_dist(cx,cy,dx,dy);&#10;print_state(curr_state)" name="ACTIVE" incomingTransitions="_nWvGwOhzEemQArtQ3KXIEg">
        <outgoingTransitions xmi:id="_Y2CoAOh0EemQArtQ3KXIEg" specification="[pushed]" target="_c0AkUOhyEemQArtQ3KXIEg"/>
        <regions xmi:id="_bEd5UOhyEemQArtQ3KXIEg" name="r1">
          <vertices xsi:type="sgraph:State" xmi:id="_gJNlkOhyEemQArtQ3KXIEg" specification="entry/&#10;curr_state = states.DRIVING;&#10;theta = 0&#10;always/&#10;theta = read_gyro();&#10;left_speed = left_wheel(distance, angle - theta);&#10;right_speed = right_wheel(distance, angle - theta);&#10;drive_kobuki(left_speed, right_speed);&#10;print_dist(distance)&#10;exit/&#10;theta = 0" name="Move" incomingTransitions="_j7zUEBoPEeqgCI2q-MOxEg _cgkB0ByREeqH3Lem_5r4Sg _Eg7ZcB9xEeqFrI9EHac4dA">
            <outgoingTransitions xmi:id="_cFQl4ByREeqH3Lem_5r4Sg" specification="[distance &lt; 0.2]" target="_Spnx4ByREeqH3Lem_5r4Sg"/>
            <outgoingTransitions xmi:id="_gafvEB92EeqFrI9EHac4dA" specification="[cliff_l || cliff_c || cliff_r]" target="_sd-BoB9uEeqFrI9EHac4dA"/>
          </vertices>
          <vertices xsi:type="sgraph:Entry" xmi:id="_T_JKgOh0EemQArtQ3KXIEg">
            <outgoingTransitions xmi:id="_j7zUEBoPEeqgCI2q-MOxEg" target="_gJNlkOhyEemQArtQ3KXIEg"/>
          </vertices>
          <vertices xsi:type="sgraph:State" xmi:id="_Spnx4ByREeqH3Lem_5r4Sg" specification="entry/&#10;stop_gyro();&#10;curr_state = states.STOP&#10;always/&#10;stop_kobuki();&#10;print_dist(distance)&#10;" name="Stop" incomingTransitions="_cFQl4ByREeqH3Lem_5r4Sg">
            <outgoingTransitions xmi:id="_cgkB0ByREeqH3Lem_5r4Sg" specification="[distance &gt; 0.2]" target="_gJNlkOhyEemQArtQ3KXIEg"/>
          </vertices>
          <vertices xsi:type="sgraph:State" xmi:id="_sd-BoB9uEeqFrI9EHac4dA" specification="entry/&#10;curr_state = states.FIND;&#10;dist = 0&#10;always/&#10;drive_kobuki(-80, -80);&#10;dist = update_dist(dist, prev_encoder, false);&#10;prev_encoder = read_encoder();&#10;print_dist(dist)&#10;exit/&#10;stop_kobuki()" name="BackUp" incomingTransitions="_gafvEB92EeqFrI9EHac4dA">
            <outgoingTransitions xmi:id="_Eg7ZcB9xEeqFrI9EHac4dA" specification="[get_abs(dist) &gt; 0.2]" target="_gJNlkOhyEemQArtQ3KXIEg"/>
          </vertices>
        </regions>
      </vertices>
      <vertices xsi:type="sgraph:State" xmi:id="_c0AkUOhyEemQArtQ3KXIEg" specification="entry/&#10;pushed=false&#10;always/&#10;stop_kobuki();&#10;parse();&#10;pushed=is_button_press();&#10;cx = curr_x;&#10;cy = curr_y;&#10;dx = desired_x;&#10;dy = desired_y;&#10;angle_d = curr_theta;&#10;angle = find_rotation(cx,cy,dx,dy,angle_d);&#10;print_state(states.OFF);&#10;print_dist(dy)" name="OFF" incomingTransitions="_VwawUOhzEemQArtQ3KXIEg _Y2CoAOh0EemQArtQ3KXIEg">
        <outgoingTransitions xmi:id="_nWvGwOhzEemQArtQ3KXIEg" specification="[pushed]" target="_bEa2AOhyEemQArtQ3KXIEg"/>
      </vertices>
      <vertices xsi:type="sgraph:Entry" xmi:id="_VMXBAOhzEemQArtQ3KXIEg">
        <outgoingTransitions xmi:id="_VwawUOhzEemQArtQ3KXIEg" specification="" target="_c0AkUOhyEemQArtQ3KXIEg"/>
      </vertices>
    </regions>
  </sgraph:Statechart>
  </xmi:XMI>